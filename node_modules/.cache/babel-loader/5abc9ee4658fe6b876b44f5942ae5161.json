{"ast":null,"code":"/*! npm.im/intervalometer */\nfunction intervalometer(cb, request, cancel, requestParameter) {\n  var requestId;\n  var previousLoopTime;\n  function loop(now) {\n    // Must be requested before cb() because that might call .stop()\n    requestId = request(loop, requestParameter);\n\n    // Called with \"ms since last call\". 0 on start()\n    cb(now - (previousLoopTime || now));\n    previousLoopTime = now;\n  }\n  return {\n    start: function start() {\n      if (!requestId) {\n        // Prevent double starts\n        loop(0);\n      }\n    },\n    stop: function stop() {\n      cancel(requestId);\n      requestId = null;\n      previousLoopTime = 0;\n    }\n  };\n}\nfunction frameIntervalometer(cb) {\n  return intervalometer(cb, requestAnimationFrame, cancelAnimationFrame);\n}\nfunction timerIntervalometer(cb, delay) {\n  return intervalometer(cb, setTimeout, clearTimeout, delay);\n}\nexport { intervalometer, frameIntervalometer, timerIntervalometer };","map":null,"metadata":{},"sourceType":"module"}